{
	"scopeName": "source.alg",
	"name": "Z Language",
	"patterns": [
	  {
		"name": "keyword.control.zlang",
		"match": "\\b(SOIENT|DEBUT|FIN|ACTION|FONCTION|SI|SINON|FSI|TANTQUE|FINTANTQUE|TQ|FTQ|POUR|FPOUR|FINPOUR|APPEL|ECRIRE|LIRE|SINON|FSI|CREERNOEUD|LIBERERNOEUD|AFF_FG|AFF_FD|AFF_PERE|AFF_INFO|AFF_STRUCT|AFF_VAL|AFF_ADR|ALLOUER|LIBERER|EMPILER|DEPILER|ENFILER|DEFILER|CREERLISTE|ALEANOMBRE)\\b"
	  },
	  {
		"name": "storage.type.zlang",
		"match": "\\b(ENTIER|BOOLEEN|CAR|CHAINE|LISTE|PILE|FILE|STRUCTURE|VECTEUR|ARB|ARM|DE|VERS|UNE)\\b"
	  },
	  {
		"name": "constant.language.zlang",
		"match": "\\b(VRAI|FAUX|NIL|NON)\\b"
	  },
	  {
		"name": "comment.block.zlang",
		"begin": "/\\*",
		"end": "\\*/"
	  },
	  {
		"name": "string.quoted.single.zlang",
		"begin": "'",
		"end": "'"
	  },
	  {
		"name": "variable.parameter.zlang",
		"match": "\\b[A-Za-z][A-Za-z0-9_]*\\b"
	  },
	  {
		"name": "entity.name.function.zlang",
		"match": "\\b[A-Za-z][A-Za-z0-9_]*\\s*(?=\\()"
	  },
	  {
		"name": "keyword.operator.zlang",
		"match": "(:=|<>|<|>|<=|>=|#|=|\\+|-|\\*|/|ET|OU)"
	  },
	  {
		"name": "support.function.zlang",
		"match": "\\b(VALEUR|SUIVANT|STRUCT|INFO|FG|FD|PERE|PILEVIDE|FILEVIDE)\\b"
	  },
	  {
		"name": "constant.numeric.zlang",
		"match": "\\b\\d+\\b"
	  },
	  {
		"name": "punctuation.section.zlang",
		"match": "[\\(\\)\\[\\]\\{\\}\\,\\;]"
	  }
	],
	"repository": {}
  }